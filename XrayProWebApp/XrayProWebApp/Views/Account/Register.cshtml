@model XrayProWebApp.Models.RegisterViewModel

@{
    ViewBag.Title = "Register New Account";
}

<main aria-labelledby="title" class="container mt-4">
    <h2 id="title">@ViewBag.Title</h2>
    <hr />

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()

        @*        @Html.ValidationSummary("", new { @class = "text-danger mb-3" })*@

        <div class="form-group">
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.First_name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.First_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.First_name)
                @Html.TextBoxFor(m => m.First_name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.First_name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.Last_name)
                @Html.TextBoxFor(m => m.Last_name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Last_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(m => m.Gender, new { @class = "col-sm-2 col-form-label" })
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.Gender, "M", new { @class = "form-check-input" })
                @Html.Label("Male", new { @class = "form-check-label" })
            </div>
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.Gender, "F", new { @class = "form-check-input" })
                @Html.Label("Female", new { @class = "form-check-label" })
            </div>
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.Gender, "N", new { @class = "form-check-input" })
                @Html.Label("Prefer not to say", new { @class = "form-check-label" })
            </div>
        </div>
        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.Dob)
                @Html.TextBoxFor(m => m.Dob, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(m => m.Dob, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.PhoneNumber)
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-2">
                @Html.LabelFor(m => m.Street_number)
                @Html.TextBoxFor(m => m.Street_number, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Street_number, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-10">
                @Html.LabelFor(m => m.Street)
                @Html.TextBoxFor(m => m.Street, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.Suburb)
                @Html.TextBoxFor(m => m.Suburb, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Suburb, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(m => m.State)
                @Html.DropDownListFor(m => m.State, new SelectList(
                    new List<string>() { "NSW", "VIC", "QLD", "SA", "WA", "TAS", "ACT", "NT" }),
                    "Select a state", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-2">
                @Html.LabelFor(m => m.Postcode)
                @Html.TextBoxFor(m => m.Postcode, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            <input type="submit" value="Register" class="btn btn-outline-dark" />
            <button onclick="window.history.back();" class="btn btn-light ml-2">Back</button>
        </div>
    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}